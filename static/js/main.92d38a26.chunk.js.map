{"version":3,"sources":["components/Header.js","components/Footer.js","components/Currency.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","Component","Footer","Row","Col","Currency","this","props","name","Table","striped","bordered","hover","variant","buy","sale","App","getInitialstate","event","setState","select_value","target","value","state","USD","EUR","RUR","USD_buy_rate","USD_sale_rate","EUR_buy_rate","EUR_sale_rate","RUR_buy_rate","RUR_sale_rate","money_info","input","res_UAH","handleChange","bind","change_buy","change_sale","fetch","response","json","data","console","log","preventDefault","Date","toLocaleDateString","type","placeholder","onChange","Button","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.92d38a26.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport './header.css';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header_wrapper\">\r\n                <Container>\r\n                    <h1> Exchange </h1>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './footer.css';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer_wrapper\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col> \r\n                            <p> 2020 &copy; A. Petrechko </p>\r\n                            <p> All rights reserved </p> \r\n                        </Col>\r\n                        <Col> \r\n                            <p> Корисні посилання </p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p> Контакти </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './currency.css';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default class Currency extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card_wrapper\">\r\n                <h5> Валюта <span> {this.props.name} </span> </h5>\r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Купівля</th>\r\n                            <th>Продаж</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td> {this.props.buy} </td>\r\n                            <td> {this.props.sale} </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Container, Button } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Currency from './components/Currency';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      USD: 'USD',\n      EUR: 'EUR',\n      RUR: 'RUR',\n      USD_buy_rate: '',\n      USD_sale_rate: '',\n      EUR_buy_rate: '',\n      EUR_sale_rate: '',\n      RUR_buy_rate: '',\n      RUR_sale_rate: '',\n      money_info: '',\n      input: '',\n      res_UAH: '',\n      select_value: 'USD',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.change_buy = this.change_buy.bind(this);\n    this.change_sale = this.change_sale.bind(this);\n    this.getInitialstate = this.getInitialstate.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5');\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      USD_buy_rate: data[0].buy,\n      USD_sale_rate: data[0].sale,\n      EUR_buy_rate: data[1].buy,\n      EUR_sale_rate: data[1].sale,\n      RUR_buy_rate: data[2].buy,\n      RUR_sale_rate: data[2].sale,\n    });\n  }\n\n  handleChange(event){\n    event.preventDefault();\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  change_buy(event){\n    event.preventDefault();\n    if (this.state.select_value === \"USD\") {\n      this.setState({\n        res_UAH: this.state.input * this.state.USD_sale_rate,\n      });\n    } else if (this.state.select_value === \"EUR\") {\n      this.setState({\n        res_UAH: this.state.input * this.state.EUR_sale_rate\n      });\n    } else if (this.state.select_value === \"RUR\") {\n      this.setState({\n        res_UAH: this.state.input * this.state.RUR_sale_rate\n      });\n    } else {\n      this.setState({\n        res_UAH: this.state.input,\n      });\n    }\n  }\n\n  change_sale(event){\n    event.preventDefault();\n    if (this.state.select_value === \"USD\") {\n      this.setState({\n        res_UAH: this.state.input * this.state.USD_buy_rate,\n      });\n    } else if (this.state.select_value === \"EUR\") {\n      this.setState({\n        res_UAH: this.state.input * this.state.EUR_buy_rate,\n      });\n    } else if (this.state.select_value === \"RUR\") {\n      this.setState({\n        res_UAH: this.state.input * this.state.RUR_buy_rate\n      });\n    } \n  }\n\n  getInitialstate = (event) => {\n    this.setState({\n      select_value: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <div className=\"Content\">\n          <Container>\n            <h1> Курс валют станом на {new Date().toLocaleDateString()} </h1>\n            <div className=\"kurs_card\">\n              <Currency name={this.state.USD} buy={this.state.USD_buy_rate} sale={this.state.USD_sale_rate} />\n              <Currency name={this.state.EUR} buy={this.state.EUR_buy_rate} sale={this.state.EUR_sale_rate} />\n              <Currency name={this.state.RUR} buy={this.state.RUR_buy_rate} sale={this.state.RUR_sale_rate} />\n            </div>\n            <h1> Калькулятор обміну валют </h1>\n            <div className=\"change_box\">\n              <h4> Я хочу </h4>\n              <form>\n                <input type=\"text\" placeholder=\"100\" onChange={this.handleChange} />\n                <select onChange={this.getInitialstate} value={this.state.select_value}>\n                  <option value=\"USD\"> USD </option>\n                  <option value=\"EUR\"> EUR </option>\n                  <option value=\"RUR\"> RUR </option>\n                </select>\n                <Button variant=\"dark\" onClick={this.change_buy} className=\"change_btn\">Купити</Button>\n                <Button variant=\"dark\" onClick={this.change_sale} className=\"change_btn\">Продати</Button>\n              </form>\n              <h4> Результат </h4>\n              <h5> UAH {this.state.res_UAH} </h5>\n\n            </div>\n            <h6> Сайт працює використовуючи Rest API Приватбанк </h6>\n          </Container>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}